{"version":3,"sources":["Store/Actions/userAction.js","Store/ActionTypes/index.js","Store/Actions/moviesActions.js","Components/Header/index.jsx","Components/Footer/index.jsx","Components/Forms/SignUpForm/index.jsx","Containers/SignUp/index.js","Components/Forms/LogIn/index.jsx","Containers/LogIn/index.js","Components/DashItem/index.jsx","Containers/Dashboard/index.js","Components/FullInfo/index.jsx","Containers/DetailInfo/index.js","Components/Forms/NewMovieForm/index.jsx","Containers/NewMovie/index.js","PrivatRouter.jsx","App.js","serviceWorker.js","Store/Reducers/userReducer.js","Store/Reducers/moviesReducer.js","Store/rootReducer.js","Store/store.js","index.js"],"names":["SignUpRequest","payload","type","SignUpSuccess","SignUpFail","LogInRequest","LogInSuccess","LogInFail","url","getMoviesSuccess","getMoviessFail","addNewMovieRequest","addNewMovieSuccess","addNewMovieFail","GetAllMovies","dispatch","a","getMoviesRequest","axios","methos","headers","Authorization","localStorage","JwtToken","data","result","connect","state","login","userReducer","movies","moviesReducer","userLogOut","props","className","onClick","to","Footer","SignUpForm","handleSubmit","onSubmit","Field","name","component","placeholder","required","reduxForm","form","SignUpError","SignUpSucc","SignUp","event","method","e","values","age","username","password","telephone","formValues","Number","regSubmit","LogInForm","isFatching","isFetching","logInSucc","logInError","LogIn","setItem","token","JSON","parse","config","split","DashItem","id","func","selected","fullInfo","map","item","key","theMovie","filter","year","genres","elem","ClosefullInfo","NewMovieForm","closeNewMovieComponent","AddNewMovie","Comedy","Horror","Drama","yearNumb","push","Submit","Component","render","innerProps","App","path","exact","Registration","Dashboard","DetailInfo","NewMovie","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","formReducer","removeItem","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e340cb0.chunk.js","sourcesContent":["import * as types from '../ActionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\n    \r\n\r\n\r\nconst SignUpRequest = payload => ({\r\n    type:types.USER_SIGN_UP_REQUEST,\r\n    payload\r\n})\r\n\r\nconst SignUpSuccess = payload => ({\r\n    type:types.USER_SIGN_UP_SUCCESS ,\r\n    payload\r\n})\r\n\r\nconst SignUpFail = payload => ({\r\n    type:types.USER_SIGN_UP_FAIL,\r\n    payload\r\n})\r\n\r\n\r\n\r\nconst LogInRequest = payload => ({\r\n    type:types.USER_LOG_IN_REQUEST,\r\n    payload\r\n})\r\n\r\nconst LogInSuccess = payload =>({\r\n    type:types.USER_LOG_IN_SUCCESS ,\r\n    payload\r\n})\r\n\r\nconst LogInFail = payload => ({\r\n    type:types.USER_LOG_IN_FAIL,\r\n    payload\r\n})\r\n\r\n\r\nexport const userLogOut = payload => ({\r\n    type:types.USER_LOG_OUT,\r\n    payload\r\n})\r\n\r\nexport const autoLogIn = payload => ({\r\n    type:types.AUTO_LOG_IN,\r\n    payload\r\n})\r\n\r\n \r\nexport const url =\"https://film-api-go.herokuapp.com\"\r\n\r\n\r\nexport const SignUp = payload => async dispatch => {\r\n    \ttry {\r\n    \t\tdispatch(SignUpRequest());\r\n\t\t\t\r\n    \t\tconst data = await axios({\r\n    \t\t\tmethod: \"POST\",\r\n    \t\t\turl: `${url}/auth`,\r\n    \t\t\tdata: payload\r\n\t\t\t});\r\n\t\t\tdispatch(SignUpSuccess( data ));\r\n\t\t} catch  ( error ) {\r\n\r\n\t\t\tdispatch(SignUpFail( error ))\r\n\t\t} \t\r\n\t};\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const LogIn = payload => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(LogInRequest());\r\n\t\r\n\t\tconst data = await axios({\r\n\t\t\tmethod: \"POST\",\r\n\t\t\turl: `${url}/login`,\r\n\t\t\tdata: payload\r\n\t\t});\r\n\t\tlocalStorage.setItem(\"JwtToken\", data.data.token);\r\n\t\tconst login = JSON.parse(data.config.data.split(\",\")[0].split(\":\")[1])\r\n\t\tlocalStorage.setItem( \"login\", login)\r\n\t\tdispatch(LogInSuccess( login ))\r\n\t} catch  ( error ) {\r\n\t\tdispatch(LogInFail( error ))\r\n\t} \t\r\n};","export const USER_SIGN_UP= \"USER_SIGN_UP\";\r\n\r\n\r\n\r\n\r\nexport const USER_SIGN_UP_REQUEST = \"USER_SIGN_UP_REQUEST\";\r\nexport const USER_SIGN_UP_SUCCESS = \"USER_SIGN_UP_SUCCESS\";\r\nexport const USER_SIGN_UP_FAIL = \"USER_SIGN_UP_FAIL\";\r\n\r\n\r\nexport const AUTO_LOG_IN = \"AUTO_LOG_IN\";\r\nexport const USER_LOG_IN_REQUEST = \"USER_LOG_IN_REQUEST\";\r\nexport const USER_LOG_IN_SUCCESS = \"USER_LOG_IN_SUCCESS\";\r\nexport const USER_LOG_IN_FAIL = \"USER_LOG_IN_FAIL\";\r\n\r\nexport const USER_LOG_OUT = \"USER_LOG_OUT\";\r\n\r\n\r\nexport const GET_MOVIES_REQUEST = \"GET_MOVIES_REQUEST\";\r\nexport const GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\r\nexport const GET_MOVIES_FAIL = \"GET_MOVIES_FAIL\";\r\n\r\nexport const ADD_NEW_MOVIE_REQUEST = \"ADD_NEW_MOVIE_REQUEST\";\r\nexport const ADD_NEW_MOVIE_SUCCESS = \"ADD_NEW_MOVIE_SUCCESS\";\r\nexport const ADD_NEW_MOVIE_FAIL = \"ADD_NEW_MOVIE_FAIL\";\r\n\r\n\r\n\r\nexport const FULL_MOVIE_INFO = \"FULL_MOVIE_INFO\";\r\nexport const CLOSE_FULL_MOVIE_INFO = \"CLOSE_FULL_MOVIE_INFO\";\r\n\r\n\r\n\r\n\r\n","import * as types from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport { url } from './userAction';\r\n\r\n\r\n\r\nconst getMoviesRequest = payload => ({\r\n    type:types.GET_MOVIES_REQUEST,\r\n    payload\r\n})\r\n\r\nconst getMoviesSuccess = payload => ({\r\n    type:types.GET_MOVIES_SUCCESS ,\r\n    payload\r\n})\r\n\r\nconst getMoviessFail = payload => ({\r\n    type:types.GET_MOVIES_FAIL,\r\n    payload\r\n})\r\n\r\nconst addNewMovieRequest = payload => ({\r\n    type:types.ADD_NEW_MOVIE_REQUEST,\r\n    payload\r\n})\r\n\r\nconst addNewMovieSuccess = payload => ({\r\n    type:types.ADD_NEW_MOVIE_SUCCESS ,\r\n    payload\r\n})\r\n\r\nconst addNewMovieFail = payload => ({\r\n    type:types.ADD_NEW_MOVIE_FAIL,\r\n    payload\r\n})\r\n\r\n\r\nexport const fullInfo = payload => ({\r\n    type:types.FULL_MOVIE_INFO,\r\n    payload\r\n})\r\n\r\nexport const ClosefullInfo = payload => ({\r\n    type:types.CLOSE_FULL_MOVIE_INFO,\r\n    payload\r\n})\r\n\r\n\r\nexport const GetAllMovies = () => async dispatch =>{\r\n    try{\r\n        dispatch(getMoviesRequest());\r\n        const data = await axios({\r\n            methos: \"GET\",\r\n            headers: {\r\n\t            Authorization: `Bearer ${localStorage.JwtToken}`\r\n            },\r\n            url : `${url}/api/v1/film?`\r\n        });\r\n        dispatch(getMoviesSuccess(data.data.result))\r\n    }\r\n    catch( error ) {\r\n        dispatch(getMoviessFail(error)) \r\n    }\r\n};\r\n\r\n\r\nexport const AddNewMovie = payload => async dispatch => {\r\n    try{ \r\n        dispatch(addNewMovieRequest());\r\n        const data = await axios ({\r\n            method : \"POST\",\r\n            headers: {\r\n\t            Authorization: `Bearer ${localStorage.JwtToken}`\r\n            },\r\n            url : `${url}/api/v1/film`,\r\n            data: payload\r\n\r\n    }); \r\n        dispatch(addNewMovieSuccess(data))\r\n        dispatch(GetAllMovies()) \r\n}   \r\n    catch( error ) {\r\n        dispatch(addNewMovieFail(error))\r\n    }\r\n};","import React from 'react';\r\nimport './header.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userLogOut } from '../../Store/Actions/userAction';\r\nimport { GetAllMovies } from '../../Store/Actions/moviesActions';\r\n\r\n\r\n\r\n\r\nconst Header = props =>{\r\n    const { login, userLogOut, GetAllMovies, movies } = props\r\n    const LogOut = () =>{\r\n        userLogOut()\r\n    }\r\n    const getMovies = () =>{\r\n       GetAllMovies()   \r\n    } \r\n    return(\r\n        <div className=\"header_component\">\r\n            <div className=\"logo\" > </div>\r\n            <div className=\"nav\" >\r\n              { login && <ul>\r\n                    <li><Link onClick={getMovies} to=\"/dashboard\" >List of movies</Link></li>\r\n                    <li><Link  to=\"/newMovie\" > Add new movie</Link></li>\r\n                </ul> }\r\n            </div>\r\n            <div className=\"user\" >\r\n                { login ? <span  onClick={LogOut}>Log Out</span> : <Link to=\"/login\"> <span >Log In</span></Link> }\r\n                { login ? <span>{login}</span> : <Link to=\"/auth\"><span>Sign Up</span></Link>}\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\nconst mapStateToProps = state =>({\r\n    login : state.userReducer.login,\r\n    movies: state.moviesReducer.movies\r\n})\r\nconst mapDispachStateToProps = dispatch =>({\r\n    userLogOut: () =>dispatch( userLogOut()),\r\n    GetAllMovies: () => dispatch( GetAllMovies())\r\n})\r\nexport default connect( mapStateToProps, mapDispachStateToProps )(Header)\r\n","import React from 'react';\r\nimport './footer.css';\r\n\r\n\r\n\r\n\r\n\r\nexport const Footer = props =>{\r\n    return(\r\n        <div className=\"footer_component\">\r\n        </div>\r\n    )\r\n} ","import React  from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport './SignUpStyles.css';\r\n\r\n\r\n \r\n let SignUpForm = props =>{\r\n    const { handleSubmit } = props\r\n    return(\r\n        <div className=\"sign_up_form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Field \r\n                    name=\"login\" \r\n                    type=\"text\"\r\n                    component=\"input\"\r\n                    placeholder=\"Login\"\r\n                    required= {true} />\r\n                <Field \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    component=\"input\"\r\n                    placeholder=\"Password\"\r\n                    required= {true}/>\r\n                <Field \r\n                    name=\"username\"\r\n                    type=\"text\" \r\n                    component=\"input\"\r\n                    placeholder=\"Name\"\r\n                    required= {true}/>\r\n                <Field \r\n                    name=\"age\"\r\n                    type=\"number\" \r\n                    component=\"input\"\r\n                    placeholder=\"Age\"\r\n                    required= {true}/>\r\n                <Field \r\n                    name=\"telephone\"\r\n                    type=\"text\" \r\n                    component=\"input\"\r\n                    placeholder=\"Telephone\"\r\n                    required= {true}/>                \r\n                <button>Sign Up</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nSignUpForm = reduxForm({ form:\"SignUp\" })(SignUpForm)\r\n\r\nexport default (SignUpForm)\r\n","import React from 'react';\r\nimport SignUpForm  from '../../Components/Forms/SignUpForm';\r\nimport { connect } from 'react-redux'; \r\nimport { SignUp } from '../../Store/Actions/userAction';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst Registration = props =>{\r\n    \r\n    const regSubmit = values =>{\r\n    const { age, username, password, login, telephone } = values\r\n    const formValues = { \r\n        \"age\" : Number(age),\r\n        \"username\" : username,\r\n        \"password\" : password,\r\n        \"login\" : login,\r\n        \"telephone\" : telephone\r\n    }\r\n    props.SignUp( formValues) \r\n    }\r\n    const {SignUpError,SignUpSucc} = props \r\n    if(!SignUpError && SignUpSucc) return <Redirect to=\"/\" />\r\n    return(\r\n        <div className=\"sign_up\"> \r\n            <SignUpForm  onSubmit={ e => regSubmit(e)}/>\r\n            { SignUpError && <span>This user already registered</span>}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>({\r\n    SignUpError: state.userReducer.SignUpError,\r\n    SignUpSucc: state.userReducer.SignUpSucc\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    SignUp : event => dispatch(SignUp(event))\r\n})\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Registration)","import React  from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport './LogInStyles.css';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n \r\n let LogInForm = props =>{\r\n    const { handleSubmit, isFatching } = props\r\n    return(\r\n        <div className=\"log_in__form\">\r\n            <form className=\"formSignIn\" onSubmit={handleSubmit}>\r\n                <Field \r\n                    name=\"login\" \r\n                    type=\"text\"\r\n                    component=\"input\"\r\n                    placeholder=\"Login\"\r\n                    required= {true} />\r\n                <Field \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    component=\"input\"\r\n                    placeholder=\"Password\"\r\n                    required= {true}/> \r\n                <button>{ isFatching ? \"Loading...\" : \"Log in\" }</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nLogInForm = reduxForm({ form:\"LogIn\" })(LogInForm)\r\n\r\nconst mapStateToProps = state =>({\r\n    isFetching: state.userReducer.isFetching\r\n})\r\n\r\nexport default connect( mapStateToProps)(LogInForm)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport LogInForm  from '../../Components/Forms/LogIn';\r\nimport { connect } from 'react-redux'; \r\nimport { LogIn } from '../../Store/Actions/userAction';\r\nimport { Redirect } from 'react-router-dom';\r\n \r\n\r\nconst Authorization = props =>{\r\n    const LogInSubmit = values =>{ \r\n     props.LogIn( values) \r\n    }\r\n    const {logInError,logInSucc, login} = props \r\n    if( login && !logInError && logInSucc) return <Redirect to=\"/\" />\r\n\r\n    return(\r\n        <div className=\"log_in\"> \r\n            <LogInForm  onSubmit={ e => LogInSubmit(e)}/>\r\n            { logInError && <span>This user not found</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    LogIn : event => dispatch(LogIn(event))\r\n})\r\n\r\nconst mapStateToProps = state =>({\r\n    logInSucc : state.userReducer.logInSucc,\r\n    logInError : state.userReducer.logInError,\r\n    login : state.userReducer.login \r\n})\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Authorization)","import React from 'react';\r\nimport './DashItem.css'\r\n\r\n\r\n\r\n\r\nexport const DashItem = props =>{\r\n    const  { name, id, func} =  props\r\n\r\n    return(\r\n        <div onClick={ () => func ( id) } className=\"dashItem\">\r\n             <div className=\"movieName\">\r\n                 <span id={id}>{name}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { DashItem }  from '../../Components/DashItem';\r\nimport { connect } from 'react-redux';\r\nimport { fullInfo} from '../../Store/Actions/moviesActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Dashboard.css'\r\n \r\nconst Dashboard = props =>{\r\n    const { movies, selected } = props \r\n    const getInfo = event =>{\r\n        props.fullInfo(event)   \r\n    }  \r\n    if ( selected !== null ) return <Redirect to=\"/fullinfo\" />\r\n    return(\r\n        <>\r\n            <div className=\"dashboard_wrap\">\r\n                <div className=\"dashbord_header\">\r\n                    <div>List of movies </div>\r\n                </div>\r\n                <div className=\"content_wrap\">\r\n                    <ul className=\"dashbord_content\">\r\n                             { movies && movies.map( item => (<DashItem  func={ e =>getInfo(e)} key={item.id} {...item}/>) )}  \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    fullInfo : e => dispatch( fullInfo(e))\r\n})\r\nconst mapStateToProps = state => ({\r\n    selected: state.moviesReducer.selected,\r\n    movies : state.moviesReducer.movies\r\n})\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './FullInfo.css'\r\n\r\n\r\n\r\n\r\nconst FullInfo = props => {\r\n    const  { movies, selected} =  props\r\n    const theMovie =  movies.filter( item => item.id === selected )[0]\r\n    return(\r\n        <div className=\"detailItem\">\r\n             <div className=\"movieName\">\r\n                 <span>Name :</span> \r\n                 <span> {theMovie.name}</span>\r\n            </div>\r\n              <div className=\"movieAge\"> \r\n                <span>Year :</span>\r\n                {theMovie.year &&  <span> {theMovie.year}</span>}\r\n            </div>\r\n             <div className=\"movieGenre\">\r\n                  <span>Genre :</span>\r\n                  <span> {theMovie.genres && theMovie.genres.map( elem => (<span key={elem.id}>{elem.name} </span> ))  }</span>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>({\r\n    selected: state.moviesReducer.selected,\r\n    movies: state.moviesReducer.movies\r\n})\r\n\r\nexport default connect (mapStateToProps)( FullInfo )","import React from 'react';\r\nimport { ClosefullInfo }  from '../../Store/Actions/moviesActions';\r\nimport { connect } from 'react-redux';\r\nimport  FullInfo from '../../Components/FullInfo';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './DetaiInfo.css'\r\n \r\nconst DetailInfo = props =>{ \r\n    const Close = () =>{\r\n        props.ClosefullInfo()   \r\n    }  \r\n    if ( props.selected === null ) return <Redirect to=\"/dashboard\" />\r\n    return(\r\n        <>\r\n            <div className=\"details_wrap\">\r\n                <FullInfo/>\r\n                <button onClick={Close}>Close</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    ClosefullInfo : e => dispatch( ClosefullInfo(e))\r\n})\r\nconst mapStateToProps = state => ({\r\n    selected: state.moviesReducer.selected\r\n})\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(DetailInfo)","import React  from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport './NewMovieForm.css';\r\n\r\n\r\n \r\n let NewMovieForm = props =>{\r\n    const { handleSubmit } = props\r\n    return(\r\n        <div className=\"new_movie_form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Field \r\n                    name=\"name\" \r\n                    type=\"text\"\r\n                    component=\"input\"\r\n                    placeholder=\"Name\"\r\n                    required= {true} />\r\n                <Field \r\n                    name=\"year\"\r\n                    type=\"text\" \r\n                    component=\"input\"\r\n                    placeholder=\"Year\"\r\n                    required= {true}/>\r\n                <div className=\"field_wrap\">\r\n                    <label>Comedy</label>\r\n                    <Field  \r\n                        name=\"Comedy\"\r\n                        component=\"input\"\r\n                        id=\"Comedy\"\r\n                        type= \"checkbox\"\r\n                    />  \r\n                </div> \r\n                <div className=\"field_wrap\">\r\n                    <label>Horror</label>\r\n                    <Field  \r\n                        name=\"Horror\"\r\n                        component=\"input\"\r\n                        id=\"Horror\"\r\n                        type= \"checkbox\"\r\n                    />  \r\n                </div>   \r\n                <div className=\"field_wrap\">\r\n                    <label>Drama</label>\r\n                    <Field  \r\n                        name=\"Drama\"\r\n                        component=\"input\"\r\n                        id=\"Drama\"\r\n                        type= \"checkbox\"\r\n                    />  \r\n                </div>           \r\n                <button>New movie</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nNewMovieForm = reduxForm({ form:\"NewMovie\" })(NewMovieForm)\r\n\r\nexport default NewMovieForm\r\n","import React from 'react';\r\nimport  NewMovieForm  from '../../Components/Forms/NewMovieForm';\r\nimport { AddNewMovie }  from '../../Store/Actions/moviesActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n \r\n\r\nconst NewMovie = props =>{\r\n    const Submit = event =>{\r\n        const { name, year, Comedy, Horror, Drama } = event\r\n        const genres = []\r\n        const yearNumb = Number( year )\r\n        if( Comedy && Comedy === true ) genres.push( 1 ) \r\n        if( Horror && Horror === true ) genres.push( 2 )\r\n        if( Drama && Drama === true  ) genres.push( 3 ) \r\n        const result ={\r\n            \"name\" : name,\r\n            \"year\": yearNumb,\r\n            \"genres\": genres\r\n        } \r\n        props.AddNewMovie( result )\r\n    }\r\n    const{ closeNewMovieComponent } = props\r\n    if (closeNewMovieComponent === true ) return <Redirect to=\"/\"/>\r\n    return(\r\n        <div className=\"new_movie_wrap\">\r\n                <NewMovieForm onSubmit={ e => Submit(e)}/>\r\n        </div>\r\n    )   \r\n}\r\nconst mapDispatchStateToProps = dispatch =>({\r\n    AddNewMovie: e => dispatch( AddNewMovie( e ))\r\n})\r\nconst mapStateToProps = state =>({\r\n    closeNewMovieComponent : state.moviesReducer.closeNewMovieComponent\r\n})\r\n \r\nexport default connect ( mapStateToProps, mapDispatchStateToProps )( NewMovie ) ","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, login, ...props }) => {\r\n  return (\r\n    <>\r\n      <Route\r\n        {...props}\r\n        render={innerProps =>\r\n          login ? <Component {...innerProps} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  login: state.userReducer.login\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\"; \r\nimport './App.css';\r\n\r\n\r\nimport  Header  from './Components/Header';\r\nimport { Footer } from './Components/Footer';\r\nimport  Registration   from './Containers/SignUp';\r\nimport Authorization from './Containers/LogIn';\r\nimport  Dashboard  from './Containers/Dashboard';\r\nimport DetailInfo from './Containers/DetailInfo';\r\nimport  NewMovie  from './Containers/NewMovie';\r\nimport PrivateRoute from './PrivatRouter';\r\n\r\n\r\n\r\nconst App = ( ) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Switch >\r\n        <Route path=\"/\" exact/>\r\n        <Route path=\"/login\" component={Authorization} />\r\n        <Route path=\"/auth\" component={Registration}/>\r\n        <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\r\n        <PrivateRoute path=\"/fullinfo\" component={DetailInfo}/>\r\n        <PrivateRoute path=\"/newMovie\" component={NewMovie} />\r\n      </Switch>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../ActionTypes';\r\n\r\nconst initialState = {\r\n    isFetching : false,\r\n    SignUpError : false,\r\n    SignUpSucc : false,\r\n    logInError : false,\r\n    logInSucc : false,\r\n    login: null\r\n}\r\n\r\nexport default ( state = initialState,{type, payload} ) =>{\r\n    switch( type ) {\r\n        case types.USER_SIGN_UP_REQUEST : {\r\n            return { ...state, SignUpError : false , isFetching : true , SignUpSucc: false }\r\n        };\r\n        case types.USER_SIGN_UP_SUCCESS : {\r\n            return { ...state, SignUpSucc: true , isFetching : false }\r\n        };\r\n        case types.USER_SIGN_UP_FAIL : {\r\n            return { ...state, SignUpError : true  , isFetching : false  }\r\n        };\r\n        case types.USER_LOG_IN_REQUEST : {\r\n            return { ...state, logInError : false , isFetching : true , logInSucc: false }\r\n        };\r\n        case types.USER_LOG_IN_SUCCESS : {\r\n            return { ...state, logInSucc: true , isFetching : false, login : payload }\r\n        };\r\n        case types.USER_LOG_IN_FAIL : {\r\n            return { ...state, logInError : true  , isFetching : false  }\r\n        };\r\n        case types.AUTO_LOG_IN : {\r\n            return { ...state, login: payload  }\r\n        };\r\n        case types.USER_LOG_OUT:\r\n            localStorage.removeItem(\"JwtToken\");\r\n            localStorage.removeItem(\"login\");\r\n            return { ...state, login : null } \r\n        default: {  \r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import * as types from '../ActionTypes';\r\n\r\nconst initialState = {\r\n    movies : null,\r\n    selected : null,\r\n    closeNewMovieComponent : false\r\n}\r\n\r\n\r\nexport default ( state = initialState , { type, payload } ) =>{\r\n    switch( type ) {\r\n        case types.GET_MOVIES_SUCCESS : {\r\n            return { ...state, movies : payload }\r\n        };\r\n        case types.FULL_MOVIE_INFO : {\r\n            return { ...state, selected : payload }\r\n        };\r\n\r\n        case types.CLOSE_FULL_MOVIE_INFO : {\r\n            return { ...state, selected : null }\r\n        };\r\n\r\n        case types.ADD_NEW_MOVIE_REQUEST : {\r\n            return { ...state, closeNewMovieComponent : false }\r\n        };\r\n\r\n        case types.ADD_NEW_MOVIE_SUCCESS : {\r\n            return { ...state, closeNewMovieComponent : true }\r\n        };        \r\n        default : {\r\n            return state;\r\n        };\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport userReducer from './Reducers/userReducer';\r\nimport moviesReducer from './Reducers/moviesReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    form: formReducer,\r\n    userReducer,\r\n    moviesReducer\r\n})","import { rootReducer } from './rootReducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware( thunk ))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './Store/store';\r\nimport { autoLogIn } from './Store/Actions/userAction';\r\n\r\n\r\n  \r\n\r\nif(localStorage.JwtToken) {\r\n    store.dispatch(autoLogIn(localStorage.login))\r\n}  \r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n\r\n    , document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}